library(XML)
url<-"http://www.appdata.com/ios_apps/apps/3993351-sports-illustrated-swimsuit"
readHTMLTable(url)
tables<-readHTMLTable(url)
str(table)
str(tables)
for(i in length(tables)){
print(tables[i])
}
for(i in 1:length(tables)){
print(tables[i])
}
install.packages(c("AncestryMapper", "arulesSequences", "cardidates", "clusterPower", "coloc", "DiceKriging", "emdist", "fExtremes", "fracdiff", "fTrading", "nlstools", "pbdSLAP", "pgirmess", "plotKML", "rfPermute", "rgdal", "rjags", "RJDBC", "RWeka", "RWekajars", "sybil", "sybilDynFBA", "WGCNA"))
install.packages("shiny")
install.packages(c("aplpack", "cheb", "cmprsk", "cobs99", "DIME", "ExomeDepth", "fBonds", "fmsb", "fNonlinear", "ForeCA", "fRegression", "ftnonpar", "fUnitRoots", "ifs", "ImageMetrics", "IndependenceTests", "infotheo", "mapproj", "maps", "mrds", "msm", "MultiLCIRT", "MultiOrd", "mvtnorm", "nlstools", "pcenum", "reglogit", "rms", "rngtools", "Rssa", "Rwave", "SampleSizeMeans", "spBayes", "spTimer", "TUWmodel"))
install.packages(c("adehabitatHR", "BoolNet", "DeducerSpatial", "FGN", "FinancialInstrument", "forams", "ForeCA", "magicaxis", "mapproj", "MPDiR", "nutshell", "paramlink", "plm", "pracma", "readBrukerFlexData", "RQDA", "seacarb", "sphereplot"))
setwd("~/Google Drive/Aragorn Investor Docs/Data for Deck/Sports Market Data/Demographics")
file_list <- list.files()
file_list <- list.files()
fix(file_list)
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
viewData(dataset)
Demographics_WNBA <- read.csv("~/Google Drive/Aragorn Investor Docs/Data for Deck/Sports Market Data/Demographics/Demographics_WNBA.csv")
viewData(Demographics_WNBA)
for (file in file_list){
# if the merged Demographics_Sports doesn't exist, create it
if (!exists("Demographics_Sports")){
Demographics_Sports <- read.table(file, header=TRUE, sep="\,")
for (file in file_list){
# if the merged Demographics_Sports doesn't exist, create it
if (!exists("Demographics_Sports")){
Demographics_Sports <- read.table(file, header=TRUE, sep=",")
}
# if the merged Demographics_Sports does exist, append to it
if (exists("Demographics_Sports")){
temp_Demographics_Sports <-read.table(file, header=TRUE, sep=",")
Demographics_Sports<-rbind(Demographics_Sports, temp_Demographics_Sports)
rm(temp_Demographics_Sports)
}
}
viewData(Demographics_Sports)
file_list <- list.files()
library(reshape)
library(plyr)
for (file in file_list){
# if the merged Demographics_Sports doesn't exist, create it
if (!exists("Demographics_Sports")){
Demographics_Sports <- read.table(file, header=TRUE, sep=",")
}
# if the merged Demographics_Sports does exist, append to it
if (exists("Demographics_Sports")){
temp_Demographics_Sports <-read.table(file, header=TRUE, sep=",")
Demographics_Sports<-rbind.fill(Demographics_Sports, temp_Demographics_Sports)
rm(temp_Demographics_Sports)
}
}
}
}
}
}
viewData(Demographics_Sports)
write.csv(Demographics_Sports,"Dem.csv")
viewData(Demographics_Sports)
file_list <- list.files()
for (file in file_list){
# if the merged Demographics_Sports doesn't exist, create it
if (!exists("Demographics_Sports")){
Demographics_Sports <- read.table(file, header=TRUE, sep=",")
}
# if the merged Demographics_Sports does exist, append to it
if (exists("Demographics_Sports")){
temp_Demographics_Sports <-read.table(file, header=TRUE, sep=",")
Demographics_Sports<-rbind.fill(Demographics_Sports, temp_Demographics_Sports)
rm(temp_Demographics_Sports)
}
}
for (file in file_list){
# if the merged Demographics_Sports doesn't exist, create it
if (!exists("Demographics_Sports")){
Demographics_Sports <- read.table(file, header=TRUE, sep=",")
}
# if the merged Demographics_Sports does exist, append to it
if (exists("Demographics_Sports")){
temp_Demographics_Sports <-read.table(file, header=TRUE, sep=",")
Demographics_Sports<-rbind.fill(Demographics_Sports, temp_Demographics_Sports)
rm(temp_Demographics_Sports)
}
}
library(reshape)
library(plyr)
file_list <- list.files()
for (file in file_list){
# if the merged Sports_Demographics doesn't exist, create it
if (!exists("Sports_Demographics")){
Sports_Demographics <- read.table(file, header=TRUE, sep=",")
}
# if the merged Sports_Demographics does exist, append to it
if (exists("Sports_Demographics")){
temp_Sports_Demographics <-read.table(file, header=TRUE, sep=",")
Sports_Demographics<-rbind.fill(Sports_Demographics, temp_Sports_Demographics)
rm(temp_Sports_Demographics)
}
}
library(reshape)
library(plyr)
file_list <- list.files()
for (file in file_list){
# if the merged Sports_Demographics doesn't exist, create it
if (!exists("Sports_Demographics")){
Sports_Demographics <- read.csv(file, header=TRUE, sep=",")
}
# if the merged Sports_Demographics does exist, append to it
if (exists("Sports_Demographics")){
temp_Sports_Demographics <-read.csv(file, header=TRUE, sep=",")
Sports_Demographics<-rbind.fill(Sports_Demographics, temp_Sports_Demographics)
rm(temp_Sports_Demographics)
}
}
viewData(Sports_Demographics)
write.csv(Sports_Demographics,"Demo.csv")
library(reshape)
library(plyr)
file_list <- list.files()
for (file in file_list){
# if the merged Sports_Demographics doesn't exist, create it
if (!exists("Sports_Demographics")){
Sports_Demographics <- read.csv(file, header=TRUE, sep=",")
}
# if the merged Sports_Demographics does exist, append to it
if (exists("Sports_Demographics")){
temp_Sports_Demographics <-read.csv(file, header=TRUE, sep=",")
Sports_Demographics<-rbind.fill(Sports_Demographics, temp_Sports_Demographics)
rm(temp_Sports_Demographics)
}
}
write.csv(Sports_Demographics,"Sports_Demographics.csv")
library(reshape)
library(plyr)
file_list <- list.files()
for (file in file_list){
# if the merged Sports_Demographics doesn't exist, create it
if (!exists("Sports_Demographics")){
Sports_Demographics <- read.csv(file, header=TRUE, sep=",")
}
# if the merged Sports_Demographics does exist, append to it
if (exists("Sports_Demographics")){
temp_Sports_Demographics <-read.csv(file, header=TRUE, sep=",")
Sports_Demographics<-rbind.fill(Sports_Demographics, temp_Sports_Demographics)
rm(temp_Sports_Demographics)
}
}
write.csv(Sports_Demographics,"Sports_Demographics.csv")
library(reshape)
library(plyr)
file_list <- list.files()
for (file in file_list){
# if the merged Sports_Demographics doesn't exist, create it
if (!exists("Sports_Demographics")){
Sports_Demographics <- read.csv(file, header=TRUE, sep=",")
}
# if the merged Sports_Demographics does exist, append to it
if (exists("Sports_Demographics")){
temp_Sports_Demographics <-read.csv(file, header=TRUE, sep=",")
Sports_Demographics<-rbind.fill(Sports_Demographics, temp_Sports_Demographics)
rm(temp_Sports_Demographics)
}
}
write.csv(Sports_Demographics,"Sports_Demographics.csv")
library(reshape)
library(plyr)
file_list <- list.files()
for (file in file_list){
# if the merged Sports_Demographics doesn't exist, create it
if (!exists("Sports_Demographics")){
Sports_Demographics <- read.csv(file, header=TRUE, sep=",")
}
# if the merged Sports_Demographics does exist, append to it
if (exists("Sports_Demographics")){
temp_Sports_Demographics <-read.csv(file, header=TRUE, sep=",")
Sports_Demographics<-rbind.fill(Sports_Demographics, temp_Sports_Demographics)
rm(temp_Sports_Demographics)
}
}
write.csv(Sports_Demographics,"Sports_Demographics.csv")
list.files(pattern="\\.csv$")
for(file in files) {
stem <- gsub("\\.csv$","",file)
assign(stem,read.csv(file))
}
files <- list.files(pattern="\\.csv$")
for(file in files) {
stem <- gsub("\\.csv$","",file)
assign(stem,read.csv(file))
}
rm(Sports_Demographics)
Sports_Demographics<-rbind.fill(Demographics_Fans_All_Sports,Demographics_Fans_Sports_Geography,Demographics_Golf,Demographics_Harris_Poll_85_12,Demographics_MLB,Demographics_MLS,Demographics_NASCAR,Demographics_NBA,Demographics_NCAA_Football,Demographics_NFL,Demographics_NHL,Demographics_Sports_Fantasy_US,Demographics_WNBA)
write.csv(Sports_Demographics,"Sports_Demographics.csv")
