mean(eventDelays) #show the mean number of seconds
sum(eventDelays<=29)
poisson.test(73, 500) $conf.int
library("gplots", lib.loc="/Users/alexbresler/Library/R/3.0/library")
library(gplots)
332/500
73/500
269/500
barplot2(c(0.664,0.538),
ci.l=c(0.588,0.114),
ci.u=c(0.733,0.183),
plot.ci=TRUE
names.arg=c("Gaga","Bieber"))
barplot2(c(0.664,0.538),
ci.l=c(0.588,0.114),
ci.u=c(0.733,0.183),
plot.ci=TRUE,
names.arg=c("Gaga","Bieber"))
))
fix(TweetFrame)
poisson.test(c(333,269),
c(500,500)) #does the test together with the 333 and 269 means over 500 for both
library(KMisc)
library(Kmisc)
write.cb(mtcars)
library(stringr)
tweetDF <- TweetFrame("MSQ",100)
head(tweetDF,1)
write.cb(tweetDF)
write.cb(tweetDF,sep=",")
head(tweetDF$text,2)
head(tweetDF$text,2) #check the second text
search()
search() #check what is attached
detach(sortweetDF)
attach(tweetDF)
str_length(text)
install.packages("RSocrata")
head(text,49)
detach(tweetDF)
attach(tweetDF)
tweetDF[textlen>140 , "text"]
attach(tweetDF)
tweetDF[textlen>140 , "text"]
tweetDF[textlen>140, "text"]
tweetDF[textlen>100, "text"]
tweetDF$textlen <- str_length(text) #add a vector for text length
detach(tweetDF)
attach(tweetDF)
View(tweetDF)
tweetDF[textlen>100, "text"]
tweetDF[textlen>140, "text"] #check teweets longer than 140
str_replace_all(text,"  "," ") #strips double spaces
tweetDF%textlen2 <-str_length(modtext)
tweetDF$textlen2 <-str_length(modtext)
tweetDF$textlen2 <-str_length(tweetDF$modtext)
tweetDF$modtext <- str_replace_all(text,"  "," ") #strips double spaces
tweetDF$textlen2 <-str_length(tweetDF$modtext)
detach(tweetDF) #detach to clear cache
attach(tweetDF) #attach to check
tweetDF[textlen != textlen2, ] #find ones with misused characters
tweetDF$wordCount <- (str_count(modtext," ") + 1)
detach(tweetDF)
attach(tweetDF)
mean(wordCount)
str_match(modtext,"RT @[a-z,A-Z]*:")
tweetDF$rt(str_match(modtext,"RT @[a-z,A-Z]*:") #add variable on retweets
tweetDF$rt(str_match(modtext,"RT @[a-z,A-Z]*:")) #add variable on retweets
tweetDF$rt <- str_match(modtext,"RT @[a-z,A-Z]*:") #add variable on retweets
detach(tweetDF)
attach(tweetDF)
head(rt,10)
tweetDF$rt <- str_replace(rt, "RT @","") #replaces RT @
tweetDF$rt <- str_replace(rt, ": ","") #replaces RT :
tail(rt, 10)
tweetDF$rt <- str_replace(rt, "RT @","") #replaces RT @
tweetDF$rt <- str_replace(rt, ": ","") #replaces RT :
tail(rt, 10)
tweetDF$rt <- tweetDF$rt[ ,1]
tweetDF$rt <- str_replace(rt, "RT @","") #replaces RT @
tweetDF$rt <- str_replace(rt, ": ","") #replaces RT :
tail(rt, 10)
str_replace(rt, "RT @","")
tweetDF$rt <- str_replace(tweetDF$rt, "RT @","") #replaces RT @
tweetDF$rt <- str_replace(tweetDF$rt, ": ","") #replaces RT :
tail(rt, 10)
str_replace(tweetDF$rt, ": ","")
detach(tweetDF)
attach(tweetDF)
tweetDF$rt <- str_replace(tweetDF$rt, "RT @","") #replaces RT @
tweetDF$rt <- tweetDF$rt[ ,1]
tweetDF$rt <- str_replace(tweetDF$rt, "RT @","") #replaces RT @
tweetDF$rt <- str_replace(tweetDF$rt, ": ","") #replaces RT :
tail(rt, 10)
install.packages(c("distrEx", "DoE.wrapper", "ez", "FrF2", "harvestr", "Matrix", "R.oo", "RcmdrPlugin.qual", "runjags", "startupmsg"))
install.packages("Matrix", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages("rCharts")
library(devtools)
install_github('rCharts', 'ramnathv', ref = 'dev')
library(devtools)
install_github('rCharts', 'ramnathv', ref = 'dev')
library("rCharts", lib.loc="/Users/alexbresler/Library/R/3.0/library")
all <- read.csv("~/Desktop/Github/Aragorn/data/Data/Datasets for Launch/Sports/NCAA/PROJAC/PROJ AC Data/DOE Revenue-Expense/Summary/Summary of Revenue and Expense 2000-2012.csv")
View(all)
year <- "2011-2012"
tw <- all[all$Year %in% year , ]
names <- unique(tw[,1:2])
names$DOE.Institution_Name <- as.character(names$DOE.Institution_Name)
all$DOE.Institution_Name$ <- NULL
all$DOE.Institution_Name <- NULL
all <- merge(all,tw,all.x=T)
View(all)
all <- read.csv("~/Desktop/Github/Aragorn/data/Data/Datasets for Launch/Sports/NCAA/PROJAC/PROJ AC Data/DOE Revenue-Expense/Summary/Summary of Revenue and Expense 2000-2012.csv")
View(all)
names <- unique(all[ , 1:2])
View(names)
names <- names[order(names$unitid,decreasing = T)]
names <- names[order(names$unitid,decreasing = T),]
View(names)
write.csv(names,"colleges.csv")
duplicated(names$unitid)
dups <- names[duplicated(names$unitid),]
not.dups <-names[!duplicated(names$unitid),]
write.csv(dups,"duplicated.csv")
dps
dups
dups<-dups[order(dups$unitid,decreasing=T),]
write.csv(dups,"duplicated.csv")
d <- read.csv("~/dups.csv")
View(d)
names <- rbind(d,not.dups)
summary(dupiclated(names$unitid))
summary(duplicated(names$unitid))
View(d)
write.csv(names,"names.csv")
rm(names)
all$DOE.Institution_Name <- NULL
names <- read.csv("~/names.csv")
View(names)
f <- merge(all, names, all.x=T)
View(f)
f <- data.frame(f,stringsAsFactors=F)
str(f)
f$DOE.Institution_Name <- as.character(f$DOE.Institution_Name)
View(f)
gsub("A and M","A&M",f$DOE.Institution_Name)
head(gsub("A and M","A&M",f$DOE.Institution_Name))
f$DOE.Institution_Name<- gsub("A and M","A&M",f$DOE.Institution_Name))
f$DOE.Institution_Name<- gsub("A and M","A&M",f$DOE.Institution_Name)
names(f)
f<- f[,c(45,1:44)]
head(f)
gsub("\\.","_",names(f))
names(f)<- tolower(gsub("\\.","_",names(f)))
names(f)
write.csv(f,"2000-2012 Financials by Sport for all NCAA Institutions,csv")
write.csv(f,"2000-2012 Financials by Sport for all NCAA Institutions.csv")
rm(all)
View(f)
unique(f$sportname)
sports <- c("Football","Basketball")
head(f[sports %in% f$sportname , ])
f$sportname <- as.character(f$sportname)
sports %in% f$sportname
f$sportname %in% sports
head(f[f$sportname %in% sports,])
fb.bb <- f[f$sportname %in% sports,]
head(fb.bb[order(fb.bb$year,decreasing=F),])
fb.bb <- fb.bb[order(fb.bb$year,decreasing=F),]
View(fb.bb)
names(fb.bb)
fb.bb[,c(2,1,20,3:5,9:11,44:45)]
mens.fb.bb <- fb.bb[,c(2,1,20,3:5,9:11,44:45)]
View(mens.fb.bb)
mens.fb.bb <- fb.bb[,c(2,1,3:5,9:11,44:45)]
setwd("~/Desktop/Github/Aragorn/data/Data/Datasets for Launch/Sports/NCAA/PROJAC/PROJ AC Data/DOE Revenue-Expense/Summary")
names(fb.bb)
mens.fb.bb <- fb.bb[,c(2,1,3:5,9:11,41,44:45)]
write.csv(mens.fb.bb,"2000-2012 Mens Football and Basketball Fina")
write.csv(mens.fb.bb,"2000-2012 Mens Football and Basketball Financials.csv")
library(dplyr)
library(data.table)
library(rCharts)
rm(f)
rm(tw)
names(mens.fb.bb)
group_by(mens.fb.bb,c(year,men_revenue))
group_by(mens.fb.bb,c(year)
)
select(mtcars, mpg, cyl, hp:vs)
summarise(mtcars, mean(disp)) #provides mean variable
summarise(group_by(mtcars, cyl), mean(disp)) #provides mtcars by cylanders
summarise(group_by(mtcars, cyl)
)
names(mens.fb.bb)
summarise(group_by(mens.fb.bb, year), sum(men_revenue))
na.rm(summarise(group_by(mens.fb.bb, year), sum(men_revenue)))
na.exclude((summarise(group_by(mens.fb.bb, year), sum(men_revenue))))
dt <- data.table(mens.fb.bb)
dt[i=!is.na(men_revenue),
j=list(revenue = sum(men_revenue)
),
by=list(school = doe_institution_name)]
dt[i=!is.na(men_revenue),
j=list(revenue = sum(men_revenue)
),
by=list(school = doe_institution_name, season = year)]
schools <- data.frame(dt[i=!is.na(men_revenue),
j=list(revenue = sum(men_revenue)
),
by=list(school = doe_institution_name, season = year)])
schools <- schools[order(schools$revenue,decreasing=T),]
head(schools)
schools <- data.frame(dt[i=!is.na(men_revenue),
j=list(revenue = sum(men_revenue)
),
by=list(school = doe_institution_name)])
schools <- schools[order(schools$revenue,decreasing=T),]
head(schools)
head(schools,n=10)
schools.years <- data.frame(dt[i=!is.na(men_revenue),
j=list(revenue = sum(men_revenue)
),
by=list(school = doe_institution_name, season = year, sport = sportname)])
schools.years <- data.frame(dt[i=!is.na(men_revenue),
j=list(revenue = sum(men_revenue), profit = sum(men_profit)
),
by=list(school = doe_institution_name, season = year, sport = sportname)])
head(school)
head(schools)
top <- head(schools, n=10)
schools <- as.character(top$school)
schools
unique(fb.bb$sportname)
schools.years$sport %in % "Football"
schools.years$sport %in% "Football"
schools.years[schools.years$sport %in% "Football",]
fb <- schools.years[schools.years$sport %in% "Football",]
dt.fb <- data.table(tb)
dt.fb <- data.table(fb)
View(fb)
df.fb[j=list(revenue = sum(revenue), profit = sum(profit), by =list(school))]
dt.fb[j=list(revenue = sum(revenue), profit = sum(profit), by =list(school))]
dt.fb[!is.na(revenue),j=list(revenue = sum(revenue), profit = sum(profit), by =list(school))]
names(dt.fv)
names(dt.fb)
fb.total <- data.frame(dt.fb[i=!is.na(revenue),
j=list(revenue = sum(revenue), profit = sum(profit)
),
by=list(school = school)])
top<-head(fb.total[order(fb.total$revenue,decreasing=T),10]
)
head(fb.total[order(fb.total$revenue,decreasing=T),],n=10)
top <-	head(fb.total[order(fb.total$revenue,decreasing=T),],n=10)
schools <- as.character(top$school)
schools
schools.name <- c("Texas","Georgia","Ohio State","Florida","Notre Dame","Auburn","Alabama","Michigan","LSU","Penn State")
fb[fb$school %in% schools,]
top.fb <- fb[fb$school %in% schools,]
seasons <- unique(top.fb$season)
seasons
s.n <- seq(from=2000,to=2011,by=1)
s <- cbind(s.n,seasons)
s <- data.frame(cbind(s.n,seasons))
View(s)
s <- data.frame(cbind(s.n,as.character(seasons)))
View(s)
names(s)
names(s) <- c("year","season")
merge(top.fb,s,all.x=T)
top.fb <- merge(top.fb,s,all.x=T)
data.frame(schools,schools.name)
schools <- data.frame(schools,schools.name,stringsAsFactors=F)
merge(top.fb, schools, all.x=T)
top.fb <- merge(top.fb, schools, all.x=T)
setwd("~/Desktop/Github/Aragorn/data/Data/Datasets for Launch/Sports/NCAA/PROJAC/PROJ AC Data/Workflows/Bloomberg/NCAA Revenue Sports/data")
(top.fb)
View(top.fb)
write.csv(top.fb,"Top Football Revenue Schools 2000-2012.csv")
library(rCharts)
ds <- top.fb
ds$revenue/1000000
ds$revenue <- ds$revenue/1000000
ds$profit <- ds$profit/1000000
names(ds)
names(ds)[8] <- "School"
names(ds)
p1 <- nPlot(revenue ~ year, group =  'School', data = ds, type = 'stackedAreaChart', id = 'chart') #Create a % stream
p1
ds
View(ds)
View(top.fb)
View(schools)
fb.total <- data.frame(dt.fb[i=!is.na(revenue),
j=list(revenue = sum(revenue), profit = sum(profit)
),
by=list(school = school)])
top <-	head(fb.total[order(fb.total$revenue,decreasing=T),],n=10)
schools <- as.character(top$school)
schools.name <- c("Texas","Georgia","Ohio State","Florida","Notre Dame","Auburn","Alabama","Michigan","LSU","Penn State")
top.fb <- fb[fb$school %in% schools,]
names(s)
View(not.dups)
View(s)
sk <- data.frame(schools,schools.names)
schools <- as.character(top$school)
schools.name <- c("Texas","Georgia","Ohio State","Florida","Notre Dame","Auburn","Alabama","Michigan","LSU","Penn State")
sk <- data.frame(schools,schools.names)
sk <- data.frame(schools,schools.name)
names(sk)
names(top.fb)
names(sk)	<- c('school','School')
top.fbs <- merge(top.fb,sk,all.x=T)
write.csv(top.fbs,"Top Football Revenue Schools 2000-2012.csv")
ds <- top.fbs
ds$revenue <- ds$revenue/1000000
ds$profit <- ds$profit/1000000
p1 <- nPlot(revenue ~ year, group =  'School', data = ds, type = 'stackedAreaChart', id = 'chart') #Create a % stream
p1
ds
s
ds <- merge(ds,s, all.x=T)
View(ds)
ds <- merge(ds,s, all.x=T)
ds
names(ds)
names(ds)[5:6]
names(ds)[5:6] <- c('Revenue_Millions','Profit_Millions')
p1 <- nPlot(Revenue_Millions ~ year, group =  'School', data = ds, type = 'stackedAreaChart', id = 'chart') #Create a % stream
p1
names(ds)
p1$addControls("y", value = "Total_Revenue", values = names(ds)[c(5,6)])
p1
p1$chart(color = c('Gold','Brown','Orange','Silver','Crimson','Blue','Red','Brown','Pink','Black'))
p1
p1$chart(color = c('Gold','Crimson','Yellow','Orange','Purple','Blue','Brown','Light Blue','Silver','Black'))
p1
names(ds)[5:6] <- c('Football_Revenue_Millions','Football_Profit_Millions')
p1 <- nPlot(Football_Revenue_Millions ~ year, group =  'School', data = ds, type = 'stackedAreaChart', id = 'chart') #Create a % stream
p1$addControls("y", value = "Football_Revenue", values = names(ds)[c(5,6)])
p1$params$xAxis=list(axisLabel = "Season")
p1
p1$publish("Top 10 Men's Football Revenue Programs",host='gist')
p1
p1$chart(color = c('Gold','Crimson','Yellow','Orange','Purple','Blue','Brown','Light Blue','Silver','Black'))
p1
p1$publish("Top 10 Men's Football Revenue Programs",host='gist')
p1$chart(color = c('Gold','Crimson','Yellow','Orange','Purple','Blue','Brown','Green','Silver','Black'))
p1$publish("Top 10 Men's Football Revenue Programs",host='gist')
ds$school<-NULL
ds$sport<-NULL
p1$publish("Top 10 Men's Football Revenue Programs",host='gist')
dt <- data.table(ds)
dt <- data.table(fb)
View(fb)
names(dt)
fb.ncaa <- data.frame(dt[i=!is.na(revenue),
j=list(revenue = sum(revenue), profit = sum(profit)
),
by=list(season = season)])
View(fb.ncaa)
View(fb.total)
fb.ncaa <- data.frame(dt[i=!is.na(revenue),
j=list(revenue = sum(revenue)
),
by=list(season = season)])
str(fb)
View(fb.ncaa)
summary(fb.total)
fb <- data.table(tb.total)
fb <- data.table(fb.total)
fb.total <- data.frame(dt.fb[i=!is.na(profit),
j=list(revenue = sum(revenue), profit = sum(profit)
),
by=list(school = school)])
View(fb.total)
fb.total <- data.frame(dt.fb[i=!is.na(profit),
j=list(revenue = sum(revenue), profit = sum(profit)
),
by=list(season = season)])
View(fb.total)
fb.rev <- data.frame(dt.fb[i=!is.na(revenue),
j=list(revenue = sum(revenue)
),
by=list(season = season)])
View(fb.rev)
data.frame(dt.fb[i=!is.na(revenue),
j=list(revenue = sum(revenue)
),
by=list(season = season)])
View(fb)
dt.fb$revenue
summary(dt.fb$revenue)
dt.fb[i=!is.na(revenue),
j=list(revenue = sum(revenue)
),
by=list(season = season)])
dt.fb[i=!is.na(revenue),
j=list(revenue = sum(revenue)
),
by=list(season = season)]
View(dt.fb)
dt.fb <- data.table(dt.fb)
str(dt.fb)
summary(dt.fb)
dt.fb[i=!is.na(revenue),
j=list(revenue = sum(revenue)
),
by=list(season = season)]
dt.fb[i=!is.na(revenue),
j=list(revenue = sum(revenue)
)]
dtfb <- dt.fb[!is.na(dt.fb$profit),]
summary(dtfv)
summary(dtfb)
summarise(mtcars, mean(disp)) #provides mean variable
summarise(group_by(mtcars, cyl), mean(disp)) #provides mtcars by cylanders
summarise(group_by(dtfb, season), sum(revenue))
dt.fb[!is.na(dt.fb$profit),]
dtfb[!is.na(dt.fb$profit),]
sum(dtfb$profit)
sum(dtfb$revenue)
as.numeric(dtfb$revenue)
sum(as.numeric(dtfb$revenue))
as.numeric(dtfb$revenue)
dtfb$revenue <- as.numeric(dtfb$revenue)
dtfb[i=!is.na(revenue),
j=list(revenue = sum(revenue), profit = sum(profit)
),
by=list(season = season)]
all <- dtfb[i=!is.na(revenue),
j=list(revenue = sum(revenue), profit = sum(profit)
),
by=list(season = season)]
s
all <- merge(all,s)
all
all$season <- NULL
all$revenue<-all$revenue/1000000
all$profit<-all$profit/1000000
all
names(all) <- c('Football_Revenue_Millions','Football_Profit_Millions','Season')
all
p2 <- nPlot(Football_Revenue_Millions ~ Season, group =  'Season', data = ds, type = 'stackedAreaChart', id = 'chart') #Create a % stream
p2 <- nPlot(Football_Revenue_Millions ~ Season, group =  'Season', data = all, type = 'stackedAreaChart', id = 'chart') #Create a % stream
p2
p2 <- nPlot(Football_Revenue_Millions ~ Season, group =  'Season', data = all, type = 'multiBarChart', id = 'chart') #Create a % stream
p2
p2 <- nPlot(Football_Revenue_Millions ~ Season, group =  'Season', data = all, type = 'lineWithFocusChart', id = 'chart') #Create a % stream
p2
ecm <- reshape2::melt(economics[,c('date', 'uempmed', 'psavert')], id = 'date')
p3 <- nPlot(~ cyl, group = 'gear', data = mtcars, type = 'multiBarHorizontalChart')
p3$chart(showControls = F) #Turns off the controller that shows grouped/stack
p3
p2 <- nPlot(Football_Revenue_Millions ~ Season, group =  'Season', data = all, type = 'multiBarHorizontalChart', id = 'chart') #Create a % stream
p2
p2 <- nPlot(Football_Revenue_Millions ~ Season, group =  'Season', data = all, type = 'scatterChart', id = 'chart') #Create a % stream
p2
all <- merge(all,s)
s
names(all)
names(all)[3]<-'season'
all <- merge(all,s)
View(all)
all <- merge(all,s,all.x=T)
all <- dtfb[i=!is.na(revenue),
j=list(revenue = sum(revenue), profit = sum(profit)
),
by=list(season = season)]
all <- merge(all,s,all.x=T)
View(all)
all$revenue<-all$revenue/1000000
all$profit<-all$profit/1000000
names(all) <- c('Football_Revenue_Millions','Football_Profit_Millions','Season')
names(all)
names(all) <- c('Season','Football_Revenue_Millions','Football_Profit_Millions','Year')
names(all)
View(all)
p2 <- nPlot(Football_Revenue_Millions ~ Season, group =  'Year', data = all, type = 'stackedAreaChart', id = 'chart') #Create a % stream
p2
p2 <- nPlot(Football_Revenue_Millions ~ Season, group =  'Year', data = all, type = 'multiBarChart', id = 'chart') #Create a % stream
p2
p2 <- nPlot(Football_Revenue_Millions ~ Year, group =  'Season', data = all, type = 'multiBarChart', id = 'chart') #Create a % stream
p2
names(all)
p2$addControls("y", value = "Football_Revenue", values = names(all)[c(2,3)])
p2$chart(color = c('Gold','Crimson','Yellow','Orange','Purple','Blue','Brown','Green','Silver','Steel','Pink','Black'))
p2
p2$chart(color = c('Gold','Crimson','Yellow','Orange','Purple','Blue','Brown','Green','Silver','Beige','Pink','Black'))
p2
p2$chart(color = c('Gold','Crimson','Silver','Orange','Purple','Blue','Brown','Green','Yellow','Navy','Pink','Black'))
p2
p2$publish("All NCAA Football Revenue and Profit",host='gist')
p2$params$width
p2$params$width <- 750
p2$params$height
p2$params$height <- 500
p2
p2$params$width <- 700
p2$params$height <- 400
p2$params$xAxis=list(axisLabel = "Season")
p2$publish("All NCAA Football Revenue and Profit",host='gist')
p2 <- nPlot(Football_Revenue_Millions ~ Year, group =  'Year', data = all, type = 'multiBarChart', id = 'chart') #Create a % stream
p2
p2$addControls("y", value = "Football_Revenue", values = names(all)[c(2,3)])
p2$chart(color = c('Gold','Crimson','Silver','Orange','Purple','Blue','Brown','Green','Yellow','Navy','Pink','Black'))
p2$params$xAxis=list(axisLabel = "Season")
p2
p2$publish("All NCAA Football Revenue and Profit",host='gist')
fb.total
top
View(top.fb)
