'http://upload.wikimedia.org/wikipedia/en/thumb/a/a7/2010_Winter_Olympics_logo.svg/300px-2010_Winter_Olympics_logo.svg.png'
)
data.frame(year_code = yeeears, olympic_url = olympic_image_url)
data.frame(year_code = yeears, olympic_url = olympic_image_url)
yeears
olympics_logos <- data.frame(year_code = yeears, olympic_url = olympic_image_url)
olympic_image_url <- c(
'http://upload.wikimedia.org/wikipedia/commons/5/5c/1924WOlympicPoster.jpg',
'http://upload.wikimedia.org/wikipedia/en/c/c5/1928_Winter_Olympics_poster.jpg',
'http://upload.wikimedia.org/wikipedia/en/thumb/2/25/1936_Winter_Olympics_logo.png/300px-1936_Winter_Olympics_logo.png',
'http://upload.wikimedia.org/wikipedia/en/8/8f/1956_Winter_Olympics_logo.png',
'http://upload.wikimedia.org/wikipedia/en/thumb/6/62/1960_Winter_Olympics_logo.svg/300px-1960_Winter_Olympics_logo.svg.png',
'http://upload.wikimedia.org/wikipedia/en/thumb/d/d3/1964_Winter_Olympics_logo.png/300px-1964_Winter_Olympics_logo.png',
'http://upload.wikimedia.org/wikipedia/en/0/0d/1968_Winter_Olympics_logo.png',
'http://steveandamysly.tannerworld.com/databank/2010/image_logo_1972_sapporo1.png',
'http://upload.wikimedia.org/wikipedia/en/thumb/3/3b/1976_Winter_Olympics_logo.png/300px-1976_Winter_Olympics_logo.png',
'http://upload.wikimedia.org/wikipedia/en/thumb/9/99/1980_Winter_Olympics_logo.svg/300px-1980_Winter_Olympics_logo.svg.png',
'http://upload.wikimedia.org/wikipedia/en/thumb/e/e8/1984_Winter_Olympics_logo.svg/300px-1984_Winter_Olympics_logo.svg.png',
'http://upload.wikimedia.org/wikipedia/en/3/31/1988_Winter_Olympics_logo.png',
'http://upload.wikimedia.org/wikipedia/en/thumb/d/d1/1992_Winter_Olympics_logo.svg/300px-1992_Winter_Olympics_logo.svg.png',
'http://upload.wikimedia.org/wikipedia/en/thumb/9/96/1994_Winter_Olympics_logo.svg/400px-1994_Winter_Olympics_logo.svg.png',
'http://upload.wikimedia.org/wikipedia/en/thumb/f/fc/1998_Winter_Olympics_logo.svg/420px-1998_Winter_Olympics_logo.svg.png',
'http://upload.wikimedia.org/wikipedia/en/thumb/4/47/2002_Winter_Olympics_logo.svg/400px-2002_Winter_Olympics_logo.svg.png',
'http://upload.wikimedia.org/wikipedia/en/thumb/c/ce/2006_Winter_Olympics_logo.svg/410px-2006_Winter_Olympics_logo.svg.png',
'http://upload.wikimedia.org/wikipedia/en/thumb/a/a7/2010_Winter_Olympics_logo.svg/300px-2010_Winter_Olympics_logo.svg.png'
)
olympics_logos <- data.frame(year_code = yeears, olympic_url = olympic_image_url)
View(ussr)
setwd("~/Desktop/Github/Aragorn/data/Data/Datasets for Launch/Sports/olympics/sports_illustrated/visualization")
write.csv(olympics_logos,'olympic_data.csv')
merge(ussr,olympics_logos)
ussr <- merge(ussr,olympics_logos)
View(ussr)
length(unique(ussr$sport))
sprintf("<table cellpadding='3' style='line-height:1.25'><tr><th colspan='2.5'>%1$s</th></tr><tr><td><img src='%2$s' height='125' width='100'></td><td align='left'>Year: %3$s<br>Total Medals: %4$s<br>Gold Medals: %5$s<br>Silver Medals: %6$s<br>Bronze Medals: %7$s<br>Athletes: %8$s</td></tr></table>",
ussr$sport,
ussr$olympic_url,
ussr$year_code,
ussr$total,
ussr$gold,
ussr$silver,
ussr$bronze,
ussr$athletes
)
ussr$detail <-
sprintf("<table cellpadding='3' style='line-height:1.25'><tr><th colspan='2.5'>%1$s</th></tr><tr><td><img src='%2$s' height='125' width='100'></td><td align='left'>Year: %3$s<br>Total Medals: %4$s<br>Gold Medals: %5$s<br>Silver Medals: %6$s<br>Bronze Medals: %7$s<br>Athletes: %8$s</td></tr></table>",
ussr$sport,
ussr$olympic_url,
ussr$year_code,
ussr$total,
ussr$gold,
ussr$silver,
ussr$bronze,
ussr$athletes
)
p1
p
p1
c
nPlot(total_medals ~ pos_date, group = ds$country, data = ds, type = 'scatterChart')
nPlot(total_medals ~ pos_date, group = 'country', data = ds, type = 'scatterChart')
names(ussr)[4:7]
names(ussr)[5:8]
names(ussr)[5:8] <- paste(names(ussr)[5:8],"_medals",sep = '')
ussr$date <- paste(ussr$year_code,"-","02-","10",sep="")
ussr$date <- as.Date(ussr$date, "%Y-%m-%d")
ussr$pos_date <- as.numeric(as.POSIXct(ussr$date)) * 1000
names(ussr)[5:8]
names(ussr)
nPlot(total_medals ~ year_code, group =  'sport', data = ussr, type = 'stackedAreaChart', id = 'chart')
str(dat)
str(ussr)
nPlot(total_medals ~ date, group =  'sport', data = ussr, type = 'stackedAreaChart', id = 'chart')
nPlot(athletes ~ date, group =  'sport', data = ussr, type = 'stackedAreaChart', id = 'chart')
hPlot(x = "year_code", y = "total_medals", data = USSR,
type = c("line", "bubble", "scatter"), group = "sport", size = "gold_medals")
hPlot(x = "year_code", y = "total_medals", data = ussr,
type = c("line", "bubble", "scatter"), group = "sport", size = "gold_medals")
hPlot(x = "year_code", y = "total_medals", data = ussr,
type = c("line", "bubble"), group = "sport", size = "gold_medals")
a <- hPlot(x = "year_code", y = "total_medals", data = ussr,
type = c("line", "bubble"), group = "sport", size = "gold_medals")
a$tooltip(useHTML = T, formatter = "#! function() { return this.point.detail; } !#")
a
ussrSeries <- lapply(split(ussr, ussr$sport), function(x) {
res <- lapply(split(x, rownames(x)), as.list)
names(res) <- NULL
return(res)
})
a <- rCharts::Highcharts$new()
invisible(sapply(ussrSeries, function(x) {
a$series(data = x, type = "scatter", name = x[[1]]$sport)
}
))
a$plotOptions(
scatter = list(
cursor = "pointer",
point = list(
events = list(
click = "#! function() { window.open(this.options.url); } !#")),
marker = list(
symbol = "circle",
radius = 5
)
a$xAxis(title = list(text = "year"), labels = list(format = "{value}"))
a$yAxis(title = list(text = "medals"), labels = list(format = "{value}"))
a$tooltip(useHTML = T, formatter = "#! function() { return this.point.name; } !#")
a$colors(
'rgba(223, 83, 83, .75)',
'rgba(60, 179, 113, .75)',
'rgba(238, 130, 238, .75)',
'rgba(30, 144, 255, .75)',
'rgba(139, 139, 131, .75)'
)
a$legend(
align = 'right',
verticalAlign = 'middle',
layout = 'vertical',
title = list(text = "Sports")
)
a
ussr
data.table(
x = ussr$year_code,
y = ussr$total_medals,
name = ussr$detail,
category = ussr$sport
)
ussrTable <- data.table(
x = ussr$year_code,
y = ussr$total_medals,
name = ussr$detail,
category = ussr$sport
)
ussrSeries <- lapply(split(ussrTable, ussrTable$category), function(x) {
res <- lapply(split(x, rownames(x)), as.list)
names(res) <- NULL
return(res)
})
a <- rCharts::Highcharts$new()
invisible(sapply(ussrSeries, function(x) {
a$series(data = x, type = "scatter", name = x[[1]]$category)
}
))
a$plotOptions(
scatter = list(
cursor = "pointer",
point = list(
events = list(
click = "#! function() { window.open(this.options.url); } !#")),
marker = list(
symbol = "circle",
radius = 5
)
a$xAxis(title = list(text = "year"), labels = list(format = "{value}"))
a$yAxis(title = list(text = "medals"), labels = list(format = "{value}"))
a$tooltip(useHTML = T, formatter = "#! function() { return this.point.name; } !#")
a$colors(
'rgba(223, 83, 83, .75)',
'rgba(60, 179, 113, .75)',
'rgba(238, 130, 238, .75)',
'rgba(30, 144, 255, .75)',
'rgba(139, 139, 131, .75)'
)
a$legend(
align = 'right',
verticalAlign = 'middle',
layout = 'vertical',
title = list(text = "Sports")
)
a
a$colors('rgba(255,127,80,1)','rgba(0,100,0,1)','rgba(255,0,0,1)','rgba(218,165,32,1)','rgba(34,139,34,1)','rgba(0,191,255,1)','rgba(218,165,32,1)','rgba(220,20,60,1)','rgba(238,32,77,1)','rgba(0,0,128,1)','rgba(148,0,211,1)','rgba(255,140,0,1)','rgba(120,91,169,1)','rgba(127,154,234,1)','rgba(49,92,221,1)','rgba(1,1,1,1)','rgba(192,207,235,1)','rgba(231,189,66,1)','rgba(188,157,88,1)','rgba(21,76,135,1)','rgba(120,91,169,1)','rgba(196,52,45,1)','rgba(41,57,123,1)','rgba(144,144,144,1)','rgba(204,85,0,1)','rgba(17,121,171,1)','rgba(35,0,143,1)','rgba(128,0,0,1)','rgba(255,218,104,1)','rgba(0,0,128,1)'
)
a
a$legend(
align = 'right',
verticalAlign = 'middle',
layout = 'vertical',
title = list(text = "Sport")
)
a <- rCharts::Highcharts$new()
invisible(sapply(ussrSeries, function(x) {
a$series(data = x, type = "bar", name = x[[1]]$category)
}
))
a$plotOptions(
scatter = list(
cursor = "pointer",
point = list(
events = list(
click = "#! function() { window.open(this.options.url); } !#")),
marker = list(
symbol = "circle",
radius = 5
)
a$xAxis(title = list(text = "year"), labels = list(format = "{value}"))
a$yAxis(title = list(text = "medals"), labels = list(format = "{value}"))
a$tooltip(useHTML = T, formatter = "#! function() { return this.point.name; } !#")
a$colors('rgba(255,127,80,1)','rgba(0,100,0,1)','rgba(255,0,0,1)','rgba(218,165,32,1)','rgba(34,139,34,1)','rgba(0,191,255,1)','rgba(218,165,32,1)','rgba(220,20,60,1)','rgba(238,32,77,1)','rgba(0,0,128,1)','rgba(148,0,211,1)','rgba(255,140,0,1)','rgba(120,91,169,1)','rgba(127,154,234,1)','rgba(49,92,221,1)','rgba(1,1,1,1)','rgba(192,207,235,1)','rgba(231,189,66,1)','rgba(188,157,88,1)','rgba(21,76,135,1)','rgba(120,91,169,1)','rgba(196,52,45,1)','rgba(41,57,123,1)','rgba(144,144,144,1)','rgba(204,85,0,1)','rgba(17,121,171,1)','rgba(35,0,143,1)','rgba(128,0,0,1)','rgba(255,218,104,1)','rgba(0,0,128,1)'
)
a
a$params$height
a$params$height <- 800
a
a$params$height <- 600
a
a <- rCharts::Highcharts$new()
invisible(sapply(ussrSeries, function(x) {
a$series(data = x, type = "column", name = x[[1]]$category)
}
))
a$plotOptions(
scatter = list(
cursor = "pointer",
point = list(
events = list(
click = "#! function() { window.open(this.options.url); } !#")),
marker = list(
symbol = "circle",
radius = 5
)
a$xAxis(title = list(text = "year"), labels = list(format = "{value}"))
a$yAxis(title = list(text = "medals"), labels = list(format = "{value}"))
a$tooltip(useHTML = T, formatter = "#! function() { return this.point.name; } !#")
a$colors('rgba(255,127,80,1)','rgba(0,100,0,1)','rgba(255,0,0,1)','rgba(218,165,32,1)','rgba(34,139,34,1)','rgba(0,191,255,1)','rgba(218,165,32,1)','rgba(220,20,60,1)','rgba(238,32,77,1)','rgba(0,0,128,1)','rgba(148,0,211,1)','rgba(255,140,0,1)','rgba(120,91,169,1)','rgba(127,154,234,1)','rgba(49,92,221,1)','rgba(1,1,1,1)','rgba(192,207,235,1)','rgba(231,189,66,1)','rgba(188,157,88,1)','rgba(21,76,135,1)','rgba(120,91,169,1)','rgba(196,52,45,1)','rgba(41,57,123,1)','rgba(144,144,144,1)','rgba(204,85,0,1)','rgba(17,121,171,1)','rgba(35,0,143,1)','rgba(128,0,0,1)','rgba(255,218,104,1)','rgba(0,0,128,1)'
)
a
a$params$height <- 600
a$legend(
align = 'right',
verticalAlign = 'middle',
layout = 'vertical',
title = list(text = "Sport")
)
a
a$params$width
a$params$height <- 500
a$params$width <- 850
a
nPlot(athletes ~ year_code , group =  'sport', data = ussr, type = 'multibar', id = 'stackedAreaChart')
ussr
nPlot(athletes ~ year_code , group =  'sport', data = ussr, type = 'stackedAreaChart', id = 'chart')
nPlot(y ~ x , group =  'category', data = ussrTable, type = 'stackedAreaChart', id = 'chart')
nPlot(y ~ x , data = ussrTable, type = 'stackedAreaChart', id = 'chart')
nPlot(total_medals ~ year_code , data = ussr, type = 'stackedAreaChart', id = 'chart')
ussr$sport
unique(ussr$sport)[1:3]
ussr$sport %in% c("Ice Hockey","Figure Skating")
ussr[ussr$sport %in% c("Ice Hockey","Figure Skating"),]
u <- ussr[ussr$sport %in% c("Ice Hockey","Figure Skating"),]
View(u)
nPlot(total_medals ~ year_code , data = u, group = 'sport', type = 'stackedAreaChart', id = 'chart')
nPlot(total_medals ~ gold_medals , data = u, group = 'sport', type = 'stackedAreaChart', id = 'chart')
nPlot(val ~ t, group =  'var', data = dat, type = 'stackedAreaChart', id = 'chart')
nPlot(total_medals ~ gold_medals , group = 'sport', data = u,  type = 'stackedAreaChart', id = 'chart')
data(economics, package = 'ggplot2')
p1
data(economics, package = 'ggplot2')
ecm <- reshape2::melt(economics[,c('date', 'uempmed', 'psavert')], id = 'date')
p2 <- nPlot(value ~ date, group = 'variable', data = ecm, type = 'stackedAreaChart')
p2
str(ecm)
str(u)
u$sport <- as.factor(u$sport)
nPlot(athletes ~ date, group = 'sport', data = u, type = 'stackedAreaChart')
u$t <- 500
nPlot(athletes ~ t, group = 'sport', data = u, type = 'stackedAreaChart')
detach("package:rCharts", unload=TRUE)
remove.packages("rCharts")
library("devtools", lib.loc="/Users/alexbresler/Library/R/3.0/library")
install_github("rCharts", "ramnathv", ref = "dev")
library("rCharts", lib.loc="/Users/alexbresler/Library/R/3.0/library")
p2 <- nPlot(value ~ date, group = 'variable', data = ecm, type = 'stackedAreaChart')
p2
View(dt)
View(basis_13)
p2 <- nPlot(equity_distribution_from_recap ~ greenland_equity, group = 'group', data = ecm, type = 'stackedAreaChart')
p2 <- nPlot(equity_distribution_from_recap ~ greenland_equity, group = 'group', data = basis_09, type = 'stackedAreaChart')
p2
d <- data.frame(basis_09,basis_13,basis_13_ex_cash)
p2 <- nPlot(equity_distribution_from_recap ~ greenland_equity, group = 'group', data = d, type = 'stackedAreaChart')
p2
d <- rbind(basis_09,basis_13,basis_13_ex_cash)
p2 <- nPlot(equity_distribution_from_recap ~ greenland_equity, group = 'group', data = d, type = 'stackedAreaChart')
p2
u <- u[order(u$sport,decreasing=T),]
nPlot(total_medals ~ gold_medals , group = 'sport', data = u,  type = 'stackedAreaChart', id = 'chart')
u[,c('sport','athletes','total_medals')]
u[,c('date','sport','athletes','total_medals','detail')]
u <- u[,c('date','sport','athletes','total_medals','detail')]
nPlot(athletes ~ gold_medals , group = 'date', data = u,  type = 'stackedAreaChart', id = 'chart')
nPlot(athletes ~ total_medals , group = 'date', data = u,  type = 'stackedAreaChart', id = 'chart')
nPlot(athletes ~ date , group = 'total_medals', data = u,  type = 'stackedAreaChart', id = 'chart')
nPlot(athletes ~ date , data = u,  type = 'stackedAreaChart', id = 'chart')
nPlot(athletes ~ sport , data = u,  type = 'stackedAreaChart', id = 'chart')
d1 <- rCharts$new()
d1$setLib('uvcharts')
d1$set(categories = names(dat), type = 'Bar')
d1$set(dataset = dat)
d1$show(cdn = T)
d2 <- dTable(iris, iDisplayLength = 4)
d2$set()
library(plyr)
library(rCharts)
make_dataset <- function(x, y, dat, group = NULL){
require(plyr)
dat <- rename(dat, setNames(c('name', 'value'), c(x, y)))
if (!is.null(group)){
dlply(dat, group, toJSONArray, json = F)
} else {
list(main = toJSONArray(dat, json = F))
}
hair_eye <- subset(as.data.frame(HairEyeColor),Sex == "Male")
dat <- rename(dat, c('Eye' = 'name', 'Freq' = 'value'))
dat3 <- dlply(dat, "Hair", toJSONArray, json = F)
dat4 <- make_dataset("Hair", "Freq", dat = hair_eye, group = "Eye")
d1 <- rCharts$new()
d1$setLib('uvcharts')
d1$set(
categories = names(dat4),
type = 'Bar',
dataset = dat4,
dom = 'ch1'
)
d1$show(cdn = T)
uPlot("date", "value", data = datm, group = 'variable', type = 'LineChart')
uPlot <- function(x, y, data, group = NULL, ...){
dataset = make_dataset(x = x, y = y, data = data, group = group)
u1 <- rCharts::rCharts$new()
u1$setLib("http://rcharts.github.io/howitworks/libraries/widgets/uvcharts")
u1$set(
categories = names(dataset),
dataset = dataset,
...
)
return(u1)
}
u2 <- uPlot("x", "y",
data = u,
group = "sport",
type = 'StackedArea'
)
u2 <- uPlot("date", "athletes",
data = u,
group = "sport",
type = 'StackedArea'
)
u2 <- uPlot("date", "total_medals",
data = u,
group = "sport",
type = 'StackedArea'
)
hair_eye_male
mtcars
u1 <- uPlot("cyl", "mpg",
data = mtcars,
group = "cyl",
type = 'StackedBar'
)
uPlot <- function(x, y, data, group = NULL, ...){
dataset = make_dataset(x = x, y = y, data = data, group = group)
u1 <- rCharts::rCharts$new()
u1$setLib("http://rcharts.github.io/howitworks/libraries/widgets/uvcharts")
u1$set(
categories = names(dataset),
dataset = dataset,
...
)
return(u1)
}
uPlot("Hair", "Freq",
data = hair_eye_male,
group = "Eye",
type = 'StackedBar'
)
hair_eye_male
uPlot("cyl", "mpg",
data = mtcars,
group = "gear",
type = 'StackedBar'
)
mtcars <- mtcars
uPlot("cyl", "mpg",
data = mtcars,
group = "gear",
type = 'StackedBar'
)
library(rCharts)
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
head(hair_eye_male)
make_dataset <- function(x, y, data, group = NULL){
require(plyr)
dat <- rename(data, setNames(c('name', 'value'), c(x, y)))
dat <- dat[c('name', 'value', group)]
if (!is.null(group)){
dlply(dat, group, toJSONArray, json = F)
} else {
list(main = toJSONArray(dat, json = F))
}
dataset = make_dataset('Hair', 'Freq', hair_eye_male, group = 'Eye')
cat(RJSONIO::toJSON(dataset))
library(rCharts)
u1 <- rCharts$new()
u1$setLib("http://rcharts.github.io/howitworks/libraries/widgets/uvcharts")
u1$set(
type = 'Bar',
categories = names(dataset),
dataset = dataset,
dom = 'chart1'
)
u1
dataset
uPlot("cyl", "mpg",
data = mtcars,
group = "gear",
type = 'StepUpBar'
)
uPlot("total_medals", "year_code",
data = u,
group = "sport",
type = 'StepUpBar'
)
uPlot("total_medals", "date",
data = u,
group = "sport",
type = 'StepUpBar'
)
u <- u[,c('date','sport','athletes','total_medals','detail','year_code')]
ussr[,c('date','sport','athletes','total_medals','detail','year_code')]
u <- ussr[,c('sport','athletes','total_medals','detail','year_code')]
uPlot("total_medals", "year_code",
data = u,
group = "sport",
type = 'StepUpBar'
)
uPlot("year_code", "total_medals",
data = u,
group = "sport",
type = 'StepUpBar'
)
uPlot("year_code", "total_medals",
data = u,
group = "sport",
type = 'PolarArea'
)
uPlot( "total_medals",'total_medals'
data = u,
group = "sport",
type = 'PolarArea'
uPlot( "total_medals",'total_medals',
data = u,
group = "sport",
type = 'PolarArea'
)
uPlot( "total_medals",'year_code',
data = u,
group = "sport",
type = 'PolarArea'
)
uPlot( "total_medals",'year_code',
data = u,
group = "sport",
type = 'Waterfall'
)
u
nPlot(athletes ~ date , group = 'total_medals', data = ussr,  type = 'lineWithFocusChart', id = 'chart')
nPlot(athletes ~ date , group = 'sport', data = ussr,  type = 'lineWithFocusChart', id = 'chart')
plot <- nPlot(athletes ~ pos_date , group = 'sport', data = ussr,  type = 'lineWithFocusChart', id = 'chart')
plot$chart(color=country_color)
names(ussr)
plot$addControls("y", value = "total_medals", values = names(ussr)[c(5:8,4)])
plot$xAxis(tickFormat = "#!function(d) {return d3.time.format('%Y')(new Date(d))}!#")
plot$yAxis( tickFormat="#!function(d) {return d3.format('.02f')(d)}!#" )
plot
a <- country_color
a[c(1,4:6,9:15),]
a[c(1,4:6,9:15)]
a <- a[c(1,4:6,9:15)]
plot$chart(color=a)
plot <- nPlot(total_medals ~ pos_date , group = 'sport', data = ussr,  type = 'lineWithFocusChart', id = 'chart')
plot$chart(color=a)
plot$addControls("y", value = "total_medals", values = names(ussr)[c(5:8,4)])
plot$xAxis(tickFormat = "#!function(d) {return d3.time.format('%Y')(new Date(d))}!#")
plot$yAxis( tickFormat="#!function(d) {return d3.format('.02f')(d)}!#" )
plot
a <-c(
"black",
"navy",
"red",
"green",
"maroon",
"chocolate",
"orange",
"gold",
"teal",
"purple"
)
plot$xAxis(tickFormat = "#!function(d) {return d3.time.format('%Y')(new Date(d))}!#")
plot$yAxis( tickFormat="#!function(d) {return d3.format('.02f')(d)}!#" )
plot$chart(color=a)
plot$xAxis(tickFormat = "#!function(d) {return d3.time.format('%Y')(new Date(d))}!#")
plot$yAxis( tickFormat="#!function(d) {return d3.format('.02f')(d)}!#" )
plot$chart(tooltipContent = "#! function(key, x, y, e){
return '<p>' + e.point.detail + '</p>'
'<p><b>'+ 'yAxis: '+ '</b>' + y +'</p>'
} !#")
p1
plot
publish$plot('USSR Detail', host = 'gist')
plot$publish('USSR Detail', host = 'gist')
p1$publish('USSR Bloc Countries', host = 'gist')
View(medals_years_athletes)
